{{ template "base" .}}

{{ define "title"}}
    Bronze Plan
{{ end }}

{{ define "content" }}
{{ $widget := index .Data "widget"}}

<h2 class="mt-3 text-center">Bronze Plan: {{formatCurrency $widget.Price}}</h2>
<hr>


<div class="alert alert-danger text-center d-none" id="card-messages"></div>
    <form action="/payment-succeeded-temp" method="post" name="charge_form" id="charge_form" class="d-block needs-validation charge-form" autocomplete="off" novalidate="">

        <input type="hidden" name="product_id" value="{{ $widget.ID }}">
        <input type="hidden" name="amount" id="amount" value="{{ $widget.Price }}">

        <h3 class="mt-2 text-center mb-3">{{ $widget.Name }}: {{ formatCurrency $widget.Price }}</h3>
        <p>{{ $widget.Description }}</p>
        <hr>

        <div class="mb-3">
            <label for="first-name" class="form-label">First Name</label>
            <input type="text" class="form-control" id="first-name" name="first_name" required="" autocomplete="first-name-new">
        </div>
        <div class="mb-3">
            <label for="last-name" class="form-label">Last Name</label>
            <input type="text" class="form-control" id="last-name" name="last_name" required="" autocomplete="last-name-new">
        </div>
        <div class="mb-3">
            <label for="cardholder-email" class="form-label">E-mail</label>
            <input type="email" class="form-control" id="cardholder-email" name="email" required="" autocomplete="cardholder-email-new">
        </div>

        <div class="mb-3">
            <label for="cardholder-name" class="form-label">Name on Card</label>
            <input type="text" class="form-control" id="cardholder-name" name="cardholder_name" required="" autocomplete="cardholder-name-new">
        </div>

        <div class="mb-3">
            <label for="card-element" class="form-label">Credit card</label>
            <div id="card-element" class="form-control"></div>
            <div class="alert-danger text-center" id="card-errors" role="alert"></div>
            <div class="alert-success text-center" id="card-success" role="alert"></div>
        </div>
        <hr>
        <a href="javascript:void(0)" id="pay-button" class="btn btn-primary" onclick="val()">Pay {{ formatCurrency $widget.Price }}/month</a>
        <div class="text-center d-none" id="processing-payment">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
        <input type="hidden" name="payment_intent" id="payment_intent">
        <input type="hidden" name="payment_method" id="payment_method">
        <input type="hidden" name="payment_amount" id="payment_amount">
        <input type="hidden" name="payment_currency" id="payment_currency">

    </form>
</div>

{{ end }}

{{ define "js" }}
    {{ $widget := index .Data "widget"}}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        let card;
    let stripe;
    const cardMessages = document.getElementById("card-messages");
    const payButton = document.getElementById("pay-button");
    const processing = document.getElementById("processing-payment");

    // stripe = Stripe({{.StripePublishableKey}});
    stripe = Stripe('pk_test_51RAiiJQIYevZnwnf6k5vtRV78yxyQfnTaGfRJ4C6aShdwPF0jYyZaf33WivHo2XMW2ODZUSGGbya0qZ58KL2oYYm00fWUTFAD9');

    function hidePayButton() {
        payButton.classList.add("d-none");
        processing.classList.remove("d-none");
    }

    function showPayButtons() {
        payButton.classList.remove("d-none");
        processing.classList.add("d-none");
    }

    function showCardError(msg) {
        cardMessages.classList.add("alert-danger");
        cardMessages.classList.remove("alert-success");
        cardMessages.classList.remove("d-none");
        cardMessages.innerText = msg;
    }

    function showCardSuccess() {
        cardMessages.classList.remove("alert-danger");
        cardMessages.classList.add("alert-success");
        cardMessages.classList.remove("d-none");
        cardMessages.innerText = "Transaction successful";
    }

    function val() {
        let form = document.getElementById("charge_form");
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add("was-validated");
            return;
        }
        form.classList.add("was-validated");
        hidePayButton();

        let amountToCharge = document.getElementById("amount").value;

        strip.createPaymentMethod({
            type: 'card',
            card: card,
            billing_details: {
                name: document.getElementById("cardholder-name").value,
            },
        }).then(stripePaymentMethodHandler);
    }

    (function() {
        // create stripe & elements
        const elements = stripe.elements();
        const style = {
            base: {
                fontSize: '16px',
                lineHeight: '24px'
            }
        };

        // create card entry
        card = elements.create('card', {
            style: style,
            hidePostalCode: true,
        });
        card.mount("#card-element");

        // check for input errors
        card.addEventListener('change', function(event) {
            var displayError = document.getElementById("card-errors");
            if (event.error) {
                displayError.classList.remove('d-none');
                displayError.textContent = event.error.message;
            } else {
                displayError.classList.add('d-none');
                displayError.textContent = '';
            }
        });
    })();
    </script>
{{ end }}